numberï¼ŒriskId, description
133,android_logging , The App logs information. Sensitive information should never be logged.,,
129,android_insecure_random , The App uses an insecure Random Number Generator.,,
120,android_sql_raw_query , App uses SQLite Database and execute raw SQL query. Untrusted user input in raw SQL queries can cause SQL Injection. Also sensitive information should be encrypted and written to the database.,,
119,android_hardcoded , Files may contain hardcoded sensitive informations like usernames, passwords, keys etc.
119,android_read_write_external , App can read/write to External Storage. Any App can read data written to External Storage.,,
113,android_sha1 , SHA-1 is a weak hash known to have hash collisions.,,
110,android_temp_file , App creates temp file. Sensitive information should never be written into a temp file.,,
107,android_ssl_pinning , This App uses SSL certificate pinning to detect or  prevent MITM attacks in secure communication channel.,,
106,android_md5 , MD5 is a weak hash known to have hash collisions.,,
92,android_ip_disclosure , IP Address disclosure,,
91,android_clipboard_copy , This App copies data to clipboard. Sensitive data should not be copied to clipboard as other applications can access it.,,
84,android_detect_root , This App may have root detection capabilities.,,
72,android_webview , Insecure WebView Implementation. Execution of user controlled code in WebView is a critical Security Hole.,,
53,android_write_app_dir , App can write to App Directory. Sensitive Information should be encrypted.,,
52,android_webview_debug , Remote WebView debugging is enabled.,,
22,android_su_detect , This App may request root (Super User) privileges.,,
17,android_insecure_ssl , Insecure Implementation of SSL. Trusting all the certificates or accepting self signed certificates is a critical Security Hole. This application is vulnerable to MITM attacks,,
16,android_webview_ignore_ssl , Insecure WebView Implementation. WebView ignores SSL Certificate errors and accept any SSL Certificate. This application is vulnerable to MITM attacks,,
14,android_aes_ecb , The App uses ECB mode in Cryptographic encryption algorithm. ECB mode is known to be weak as it results in the same ciphertext for identical blocks of plaintext.,,
14,android_aws_ecb_default ," Calling Cipher.getInstance(\""AES\"") will return AES ECB mode by default. ECB mode is known to be weak as it results in the same ciphertext for identical blocks of plaintext.",,
12,android_safetynet , This App uses SafetyNet API,,
11,android_rsa_no_oaep , This App uses RSA Crypto without OAEP padding. The purpose of the padding scheme is to prevent a number of attacks on RSA that only work when the encryption is performed without padding.,,
8,android_sql_cipher_aes256 , This App uses SQL Cipher. SQLCipher provides 256-bit AES encryption to sqlite database files.,,
6,android_clipboard_listen , This app listens to Clipboard changes. Some malwares also listen to Clipboard changes.,,
4,android_tapjacking , This app has capabilities to prevent tapjacking attacks.,,
2,android_hiddenui , Hidden elements in view can be used to hide data from user. But this data can be leaked,,
2,android_sql_cipher , This App uses SQL Cipher. But the secret may be hardcoded.,,
2,android_weak_hash , Weak Hash algorithm used,,
1,android_db_encryption , This App use Realm Database with encryption,,
1,android_jackson_deserialize , The app uses jackson deserialization libraryDeserialization of untrusted input can result inarbitary code execution,,